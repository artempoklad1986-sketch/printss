<?php
mb_internal_encoding('UTF-8');
date_default_timezone_set('Europe/Moscow');
session_start();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥
$BASE = __DIR__;
$configFile = $BASE.'/config.json';
$productsFile = $BASE.'/products.json';
$ordersLog = $BASE.'/orders.txt';
$reviewsFile = $BASE.'/reviews.json';

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if (!file_exists($configFile)) {
    $defaultConfig = [
        'brand' => '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°',
        'site' => 'https://printss.ru',
        'address' => '–≥. –°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —É–ª. –ö—Ä–∞—Å–Ω—ã—Ö –§–æ—Ä—Ç–æ–≤, 49',
        'email_to' => 'artcopy78@bk.ru',
        'theme' => ['brand' => '#FF8A00', 'accent' => '#2D5BFF'],
        'telegram' => ['enabled' => false, 'token' => '', 'chat' => ''],
        'yukassa' => ['enabled' => false, 'shop_id' => '', 'secret_key' => '', 'return_url' => '']
    ];
    file_put_contents($configFile, json_encode($defaultConfig, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
}

if (!file_exists($productsFile)) {
    $defaultProducts = [
        [
            'id' => 1,
            'name' => '–§–æ—Ç–æ—Ä–∞–º–∫–∞ A4',
            'description' => '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–æ—Ç–æ—Ä–∞–º–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ —Ä–∞–∑–º–µ—Ä–æ–º A4',
            'full_description' => '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Ñ–æ—Ç–æ—Ä–∞–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ A4 –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–ª–∞—Å—Ç–∏–∫–∞. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π. –õ–µ–≥–∫–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º, —Ç–∞–∫ –∏ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏. –°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∑–∞—â–∏—â–∞–µ—Ç —Ñ–æ—Ç–æ –æ—Ç –ø—ã–ª–∏ –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π.',
            'price' => 500,
            'old_price' => 0,
            'stock' => 10,
            'category' => 'frames',
            'enabled' => true,
            'featured' => true,
            'image' => '',
            'gallery' => [],
            'specifications' => [
                '–†–∞–∑–º–µ—Ä' => 'A4 (21√ó29.7 —Å–º)',
                '–ú–∞—Ç–µ—Ä–∏–∞–ª' => '–ü–ª–∞—Å—Ç–∏–∫',
                '–¶–≤–µ—Ç' => '–ß–µ—Ä–Ω—ã–π, –±–µ–ª—ã–π',
                '–°—Ç–µ–∫–ª–æ' => '–û–±—ã—á–Ω–æ–µ'
            ]
        ],
        [
            'id' => 2,
            'name' => '–§–æ—Ç–æ–∞–ª—å–±–æ–º 30 –ª–∏—Å—Ç–æ–≤',
            'description' => '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º –Ω–∞ 30 –ª–∏—Å—Ç–æ–≤',
            'full_description' => '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º —Å –º–∞–≥–Ω–∏—Ç–Ω—ã–º–∏ –ª–∏—Å—Ç–∞–º–∏. –í–º–µ—â–∞–µ—Ç –¥–æ 60 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ñ–æ—Ä–º–∞—Ç–∞ 10√ó15 —Å–º. –û–±–ª–æ–∂–∫–∞ –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–∂–∑–∞–º–∞, –ª–∏—Å—Ç—ã —Å –∫–ª–µ–µ–≤–æ–π –æ—Å–Ω–æ–≤–æ–π –Ω–∞–¥–µ–∂–Ω–æ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.',
            'price' => 750,
            'old_price' => 900,
            'stock' => 5,
            'category' => 'albums',
            'enabled' => true,
            'featured' => false,
            'image' => '',
            'gallery' => [],
            'specifications' => [
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤' => '30',
                '–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' => '–î–æ 60 —Ñ–æ—Ç–æ 10√ó15',
                '–û–±–ª–æ–∂–∫–∞' => '–ö–æ–∂–∑–∞–º',
                '–†–∞–∑–º–µ—Ä' => '23√ó28 —Å–º'
            ]
        ]
    ];
    file_put_contents($productsFile, json_encode($defaultProducts, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
}

if (!file_exists($reviewsFile)) {
    $defaultReviews = [
        [
            'id' => 1,
            'product_id' => 1,
            'name' => '–ê–Ω–Ω–∞ –ö.',
            'rating' => 5,
            'comment' => '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–º–∫–∞! –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è, –∫—Ä–∞—Å–∏–≤–∞—è. –§–æ—Ç–æ —Å–º–æ—Ç—Ä–∏—Ç—Å—è –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ.',
            'date' => '2024-01-15',
            'approved' => true
        ],
        [
            'id' => 2,
            'product_id' => 2,
            'name' => '–ú–∏—Ö–∞–∏–ª –ü.',
            'rating' => 4,
            'comment' => '–•–æ—Ä–æ—à–∏–π –∞–ª—å–±–æ–º, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π. –ù–µ–º–Ω–æ–≥–æ –¥–æ—Ä–æ–≥–æ–≤–∞—Ç–æ, –Ω–æ –≤ —Ü–µ–ª–æ–º –¥–æ–≤–æ–ª–µ–Ω –ø–æ–∫—É–ø–∫–æ–π.',
            'date' => '2024-01-10',
            'approved' => true
        ]
    ];
    file_put_contents($reviewsFile, json_encode($defaultReviews, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥, —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ç–∑—ã–≤—ã
$cfg = json_decode(file_get_contents($configFile), true) ?? [];
$products = json_decode(file_get_contents($productsFile), true) ?? [];
$reviews = json_decode(file_get_contents($reviewsFile), true) ?? [];

/* –•–µ–ª–ø–µ—Ä—ã */
function esc($s){ return htmlspecialchars((string)$s, ENT_QUOTES|ENT_SUBSTITUTE, 'UTF-8'); }

function sanitize_text($s){ 
    $s = trim($s);
    $s = filter_var($s, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    return $s;
}

function validate_phone($phone) {
    $phone = preg_replace('/[^\d+]/', '', $phone);
    return strlen($phone) >= 10 && strlen($phone) <= 15;
}

function log_order($path, $data){
    $logData = '['.date('Y-m-d H:i:s').'] '.json_encode($data, JSON_UNESCAPED_UNICODE).PHP_EOL;
    file_put_contents($path, $logData, FILE_APPEND | LOCK_EX);
}

function send_email_simple($to, $subject, $body) {
    if (!filter_var($to, FILTER_VALIDATE_EMAIL)) return false;

    $headers = "From: noreply@printss.ru\r\n";
    $headers .= "Content-Type: text/plain; charset=UTF-8\r\n";
    $headers .= "X-Mailer: PHP/" . phpversion();

    return mail($to, '=?UTF-8?B?'.base64_encode($subject).'?=', $body, $headers);
}

function tg_send_message($cfg, $text) {
    if(empty($cfg['telegram']['enabled'])) return false;
    $token = $cfg['telegram']['token'] ?? '';
    $chat = $cfg['telegram']['chat'] ?? '';
    if(!$token || !$chat) return false;

    $url = "https://api.telegram.org/bot$token/sendMessage";
    $data = [
        'chat_id' => $chat,
        'text' => $text,
        'parse_mode' => 'HTML'
    ];

    $ch = curl_init($url);
    if ($ch === false) return false;

    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => http_build_query($data),
        CURLOPT_TIMEOUT => 10,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_USERAGENT => 'PHP-Shop-Bot/1.0'
    ]);

    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    return $result !== false && $httpCode === 200;
}

function yukassa_create_payment($cfg, $amount, $description, $order_id){
    if(empty($cfg['yukassa']['enabled'])) return [false, 'Payments disabled'];

    $shop_id = trim($cfg['yukassa']['shop_id'] ?? '');
    $secret_key = trim($cfg['yukassa']['secret_key'] ?? '');
    $return_url = $cfg['yukassa']['return_url'] ?? ($cfg['site'] . '/payment_result.php');

    if(!$shop_id || !$secret_key) return [false, 'Missing shop_id or secret_key'];
    if($amount <= 0) return [false, 'Invalid amount'];

    $url = 'https://api.yookassa.ru/v3/payments';

    $data = [
        'amount' => ['value' => number_format((float)$amount, 2, '.', ''), 'currency' => 'RUB'],
        'confirmation' => ['type' => 'redirect', 'return_url' => $return_url . '?order_id=' . urlencode($order_id)],
        'description' => substr($description, 0, 128),
        'metadata' => ['order_id' => (string)$order_id],
        'capture' => true
    ];

    $ch = curl_init($url);
    if ($ch === false) return [false, 'cURL initialization failed'];

    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => json_encode($data),
        CURLOPT_TIMEOUT => 30,
        CURLOPT_SSL_VERIFYPEER => true,
        CURLOPT_HTTPHEADER => [
            'Content-Type: application/json',
            'Idempotence-Key: ' . uniqid('', true),
            'Authorization: Basic ' . base64_encode($shop_id . ':' . $secret_key)
        ]
    ]);

    $result = curl_exec($ch);
    $error = curl_error($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if($error) return [false, 'CURL error: ' . $error];
    if($httpCode !== 200 && $httpCode !== 201) return [false, 'HTTP error: ' . $httpCode];

    $response = json_decode($result, true);
    if(!$response || !isset($response['confirmation']['confirmation_url'])) {
        return [false, 'Invalid response: ' . ($result ?: 'empty response')];
    }

    return [true, $response];
}

function send_order_notifications($cfg, $order, $ordersLog) {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ email
    $emailBody = "–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–∞–π—Ç–∞\n\nID –∑–∞–∫–∞–∑–∞: {$order['id']}\n\n";
    foreach ($order['items'] as $item) {
        $emailBody .= "‚Ä¢ {$item['name']} - {$item['price']} ‚ÇΩ √ó {$item['quantity']} —à—Ç = {$item['total']} ‚ÇΩ\n";
    }
    $emailBody .= "\n–ò—Ç–æ–≥–æ: {$order['total_price']} ‚ÇΩ\n\n";
    $emailBody .= "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {$order['name']}\n";
    $emailBody .= "–¢–µ–ª–µ—Ñ–æ–Ω: {$order['phone']}\n";
    if ($order['comment']) $emailBody .= "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {$order['comment']}\n";
    $emailBody .= "–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: " . ($order['payment_method'] === 'online' ? '–û–Ω–ª–∞–π–Ω (–û–ü–õ–ê–ß–ï–ù)' : '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏') . "\n";
    $emailBody .= "IP: {$order['ip']}\n\n";
    $emailBody .= "–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∑–∞–∫–∞–∑ –≤ –∞–¥–º–∏–Ω–∫–µ!";

    $emailTo = filter_var($cfg['email_to'] ?? 'artcopy78@bk.ru', FILTER_VALIDATE_EMAIL);
    if ($emailTo) {
        send_email_simple($emailTo, '–ó–∞–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã #'.$order['id'], $emailBody);
    }

    // Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    $tgMsg = "üõí <b>–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ #{$order['id']}</b>\n\n";
    foreach ($order['items'] as $item) {
        $tgMsg .= "‚Ä¢ " . htmlspecialchars($item['name']) . " √ó {$item['quantity']} = " . number_format($item['total']) . " ‚ÇΩ\n";
    }
    $tgMsg .= "\nüí∞ <b>–ò—Ç–æ–≥–æ: " . number_format($order['total_price']) . " ‚ÇΩ</b>\n\n";
    $tgMsg .= "üë§ " . htmlspecialchars($order['name']) . "\nüìû " . htmlspecialchars($order['phone']) . "\n";
    if ($order['comment']) $tgMsg .= "üí¨ " . htmlspecialchars($order['comment']) . "\n";

    if ($order['payment_method'] === 'online') {
        $tgMsg .= "üí≥ –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ ‚úÖ <b>–û–ü–õ–ê–ß–ï–ù</b>";
    } else {
        $tgMsg .= "üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏";
    }

    tg_send_message($cfg, $tgMsg);
}

function get_product_reviews($reviews, $product_id) {
    return array_filter($reviews, function($review) use ($product_id) {
        return $review['product_id'] == $product_id && $review['approved'];
    });
}

function get_average_rating($reviews, $product_id) {
    $productReviews = get_product_reviews($reviews, $product_id);
    if (empty($productReviews)) return 0;

    $totalRating = array_sum(array_column($productReviews, 'rating'));
    return round($totalRating / count($productReviews), 1);
}

function render_stars($rating) {
    $html = '';
    for ($i = 1; $i <= 5; $i++) {
        if ($i <= $rating) {
            $html .= '‚≠ê';
        } else {
            $html .= '‚òÜ';
        }
    }
    return $html;
}

// –ó–∞—â–∏—Ç–∞ –æ—Ç CSRF
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }

    // –î–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º referer
    $referer = $_SERVER['HTTP_REFERER'] ?? '';
    $host = $_SERVER['HTTP_HOST'] ?? '';
    if (!$referer || parse_url($referer, PHP_URL_HOST) !== $host) {
        http_response_code(403);
        exit('Forbidden');
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['mode'] ?? '') === 'add_review') {
    header('Content-Type: application/json; charset=utf-8');

    try {
        $product_id = (int)($_POST['product_id'] ?? 0);
        $name = sanitize_text($_POST['name'] ?? '');
        $rating = (int)($_POST['rating'] ?? 0);
        $comment = sanitize_text($_POST['comment'] ?? '');

        if (!$product_id || $rating < 1 || $rating > 5 || !$name || !$comment) {
            throw new Exception('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
        }

        if (strlen($name) < 2 || strlen($comment) < 10) {
            throw new Exception('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞, –æ—Ç–∑—ã–≤ - –º–∏–Ω–∏–º—É–º 10.');
        }

        $newReview = [
            'id' => time() . rand(100, 999),
            'product_id' => $product_id,
            'name' => $name,
            'rating' => $rating,
            'comment' => $comment,
            'date' => date('Y-m-d'),
            'approved' => false // –¢—Ä–µ–±—É–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        ];

        $reviews[] = $newReview;
        file_put_contents($reviewsFile, json_encode($reviews, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));

        echo json_encode(['ok' => true, 'message' => '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –û–Ω –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.']);
        exit;

    } catch (Exception $e) {
        echo json_encode(['ok' => false, 'message' => $e->getMessage()]);
        exit;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –∫–æ—Ä–∑–∏–Ω—ã
if ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['mode'] ?? '') === 'cart_order') {
    header('Content-Type: application/json; charset=utf-8');

    try {
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        $name = sanitize_text($_POST['name'] ?? '');
        $phone = sanitize_text($_POST['phone'] ?? '');
        $comment = sanitize_text($_POST['comment'] ?? '');
        $cart = json_decode($_POST['cart'] ?? '[]', true);
        $payment_method = sanitize_text($_POST['payment_method'] ?? 'offline');

        // –ü—Ä–æ–≤–µ—Ä–∫–∏
        if (!$name || strlen($name) < 2) throw new Exception('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).');
        if (!$phone || !validate_phone($phone)) throw new Exception('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
        if (!is_array($cart) || empty($cart)) throw new Exception('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞.');
        if (!in_array($payment_method, ['online', 'offline'])) throw new Exception('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.');

        $totalPrice = 0;
        $orderItems = [];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ
        foreach ($cart as $item) {
            if (!isset($item['id'], $item['quantity']) || !is_numeric($item['id']) || !is_numeric($item['quantity'])) {
                throw new Exception('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ.');
            }

            $productId = (int)$item['id'];
            $quantity = (int)$item['quantity'];

            if ($quantity <= 0 || $quantity > 999) {
                throw new Exception('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞.');
            }

            // –ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
            $product = null;
            foreach ($products as $p) {
                if ((int)$p['id'] === $productId && !empty($p['enabled'])) {
                    $product = $p;
                    break;
                }
            }

            if (!$product) {
                throw new Exception('–¢–æ–≤–∞—Ä —Å ID ' . $productId . ' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');
            }

            if ((int)$product['stock'] < $quantity) {
                throw new Exception('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ: ' . $product['name'] . ' (–¥–æ—Å—Ç—É–ø–Ω–æ: ' . $product['stock'] . ')');
            }

            $itemTotal = (float)$product['price'] * $quantity;
            $totalPrice += $itemTotal;

            $orderItems[] = [
                'product_id' => $productId,
                'name' => $product['name'],
                'price' => (float)$product['price'],
                'quantity' => $quantity,
                'total' => $itemTotal
            ];
        }

        if ($totalPrice <= 0) {
            throw new Exception('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞.');
        }

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∑–∞–∫–∞–∑–∞
        $order_id = 'cart_' . date('Ymd_His') . '_' . rand(1000, 9999);

        $order = [
            'id' => $order_id,
            'type' => 'cart',
            'ts' => date('Y-m-d H:i:s'),
            'items' => $orderItems,
            'total_price' => $totalPrice,
            'name' => $name,
            'phone' => $phone,
            'comment' => $comment,
            'payment_method' => $payment_method,
            'ip' => $_SERVER['REMOTE_ADDR'] ?? 'unknown',
            'user_agent' => substr($_SERVER['HTTP_USER_AGENT'] ?? '', 0, 255),
            'status' => $payment_method === 'online' ? 'pending_payment' : 'new'
        ];

        // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–∫–∞–∑
        log_order($ordersLog, $order);

        $response = ['ok' => true, 'order_id' => $order_id];

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
        if ($payment_method === 'online' && $totalPrice > 0) {
            // –î–ª—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã - —Å–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
            list($payOk, $payResult) = yukassa_create_payment($cfg, $totalPrice, "–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ #$order_id", $order_id);

            if ($payOk) {
                $response['payment'] = true;
                $response['payment_url'] = $payResult['confirmation']['confirmation_url'];
                $response['payment_id'] = $payResult['id'];
                $response['message'] = '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ...';
            } else {
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂, –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º
                $order['status'] = 'new';
                $order['payment_method'] = 'offline';
                log_order($ordersLog, ['updated_order' => $order, 'payment_error' => $payResult]);
                send_order_notifications($cfg, $order, $ordersLog);
                $response['message'] = '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç–µ–∂–∞, –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏.';
            }
        } else {
            // –î–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω –∑–∞–∫–∞–∑–æ–≤ - —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            send_order_notifications($cfg, $order, $ordersLog);
            $response['message'] = '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.';
        }

        echo json_encode($response, JSON_UNESCAPED_UNICODE);
        exit;

    } catch (Exception $e) {
        error_log("Order error: " . $e->getMessage());
        echo json_encode(['ok' => false, 'message' => $e->getMessage()], JSON_UNESCAPED_UNICODE);
        exit;
    } catch (Error $e) {
        error_log("Order fatal error: " . $e->getMessage());
        echo json_encode(['ok' => false, 'message' => '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.'], JSON_UNESCAPED_UNICODE);
        exit;
    }
}

// –°–æ–∑–¥–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
$productView = null;
if (isset($_GET['product']) && is_numeric($_GET['product'])) {
    $productId = (int)$_GET['product'];
    foreach ($products as $p) {
        if ((int)$p['id'] === $productId && !empty($p['enabled'])) {
            $productView = $p;
            break;
        }
    }
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
$categories = [
    'frames' => 'üñºÔ∏è –§–æ—Ç–æ—Ä–∞–º–∫–∏',
    'albums' => 'üìö –§–æ—Ç–æ–∞–ª—å–±–æ–º—ã', 
    'souvenirs' => 'üéÅ –°—É–≤–µ–Ω–∏—Ä—ã'
];

$filterCategory = $_GET['cat'] ?? 'all';
if ($filterCategory !== 'all' && !array_key_exists($filterCategory, $categories)) {
    $filterCategory = 'all';
}

$filteredProducts = $filterCategory === 'all' ? $products : array_filter($products, fn($p) => ($p['category'] ?? '') === $filterCategory);
$filteredProducts = array_filter($filteredProducts, fn($p) => !empty($p['enabled'])); // –¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: —Å–Ω–∞—á–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ, –ø–æ—Ç–æ–º –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
usort($filteredProducts, function($a, $b) {
    $aFeatured = !empty($a['featured']);
    $bFeatured = !empty($b['featured']);

    if ($aFeatured && !$bFeatured) return -1;
    if (!$aFeatured && $bFeatured) return 1;
    return strcasecmp($a['name'] ?? '', $b['name'] ?? '');
});

// –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
$T = $cfg['theme'] ?? [];
$brandCol = $T['brand'] ?? '#FF8A00';
$accentCol = $T['accent'] ?? '#2D5BFF';
?>
<!doctype html>
<html lang='ru'>
<head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <?php if ($productView): ?>
        <title><?=esc($productView['name'])?> - <?=esc($cfg['brand'] ?? '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°')?></title>
        <meta name='description' content='<?=esc($productView['description'] ?? '')?>'>
    <?php else: ?>
        <title>–¢–æ–≤–∞—Ä—ã - <?=esc($cfg['brand'] ?? '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°')?></title>
        <meta name='description' content='–§–æ—Ç–æ—Ä–∞–º–∫–∏, —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º—ã, –∫—Ä—É–∂–∫–∏ —Å —Ñ–æ—Ç–æ, –º–∞–≥–Ω–∏—Ç—ã –∏ –¥—Ä—É–≥–∏–µ —Å—É–≤–µ–Ω–∏—Ä—ã. –ë—ã—Å—Ç—Ä–æ–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –°–æ—Å–Ω–æ–≤–æ–º –ë–æ—Ä—É.'>
    <?php endif; ?>
    <meta name="robots" content="index, follow">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
            background: #f8f9fa; color: #212529; line-height: 1.5; 
        }

        .header { 
            background: white; border-bottom: 1px solid #e9ecef; padding: 1rem 0; 
            position: sticky; top: 0; z-index: 100; box-shadow: 0 2px 4px rgba(0,0,0,0.1); 
        }
        .header-content { 
            max-width: 1200px; margin: 0 auto; padding: 0 20px;
            display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 15px; 
        }
        .logo { font-size: 24px; font-weight: 700; color: <?=esc($brandCol)?>; }
        .nav a { margin: 0 15px; color: #6c757d; font-weight: 500; text-decoration: none; }
        .nav a:hover { color: <?=esc($accentCol)?>; }

        .container { max-width: 1200px; margin: 0 auto; padding: 40px 20px; }

        .hero { text-align: center; margin-bottom: 40px; }
        .hero h1 { font-size: 36px; font-weight: 700; margin-bottom: 15px; color: #212529; }
        .hero p { font-size: 18px; color: #6c757d; margin-bottom: 25px; }

        .breadcrumbs { margin-bottom: 30px; }
        .breadcrumbs a { color: <?=esc($accentCol)?>; text-decoration: none; }
        .breadcrumbs a:hover { text-decoration: underline; }
        .breadcrumbs span { color: #6c757d; margin: 0 8px; }

        .toolbar { 
            display: flex; justify-content: space-between; align-items: center; 
            margin-bottom: 30px; flex-wrap: wrap; gap: 15px; 
        }
        .filters { display: flex; gap: 10px; flex-wrap: wrap; }
        .filter-btn { 
            display: inline-block; padding: 8px 16px; border-radius: 6px;
            background: white; border: 1px solid #dee2e6;
            color: #495057; font-weight: 500; text-decoration: none;
            transition: all 0.2s; font-size: 14px; 
        }
        .filter-btn:hover, .filter-btn.active { background: <?=esc($accentCol)?>; color: white; border-color: <?=esc($accentCol)?>; }

        .cart-toggle { 
            background: <?=esc($brandCol)?>; color: white; border: none; padding: 10px 16px;
            border-radius: 6px; font-weight: 600; cursor: pointer; position: relative; 
        }
        .cart-count { 
            position: absolute; top: -8px; right: -8px; background: #dc3545; color: white;
            border-radius: 50%; min-width: 20px; height: 20px; font-size: 12px;
            display: flex; align-items: center; justify-content: center; 
        }

        /* –ü–ª–∞–≤–∞—é—â–∞—è –∫–æ—Ä–∑–∏–Ω–∞ */
        .floating-cart { 
            position: fixed; bottom: 20px; right: 20px; z-index: 1000;
            background: <?=esc($brandCol)?>; color: white; border-radius: 50px;
            padding: 15px 20px; cursor: pointer; box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            transition: all 0.2s; font-weight: 600; display: none; 
        }
        .floating-cart:hover { transform: translateY(-2px); box-shadow: 0 6px 16px rgba(0,0,0,0.3); }
        .floating-cart.show { display: flex; align-items: center; gap: 8px; }

        .products-grid { 
            display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px; margin-bottom: 50px; 
        }

        .product-card { 
            background: white; border: 1px solid #e9ecef; border-radius: 8px;
            overflow: hidden; transition: all 0.2s; position: relative; cursor: pointer;
        }
        .product-card:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.1); transform: translateY(-2px); }
        .product-card.featured::before { 
            content: '–•–ò–¢'; position: absolute; top: 10px; right: 10px;
            background: #dc3545; color: white;
            padding: 4px 8px; border-radius: 4px; font-size: 10px;
            font-weight: 700; z-index: 10; 
        }

        .product-image { 
            height: 200px; background: #f8f9fa; display: flex; align-items: center;
            justify-content: center; overflow: hidden; 
        }
        .product-image img { width: 100%; height: 100%; object-fit: cover; }
        .product-image .no-image { color: #adb5bd; font-size: 48px; }

        .product-info { padding: 20px; }
        .product-title { font-size: 16px; font-weight: 600; margin-bottom: 8px; color: #212529; }
        .product-description { color: #6c757d; margin-bottom: 12px; font-size: 14px; }
        .product-price { display: flex; align-items: baseline; gap: 8px; margin-bottom: 15px; }
        .current-price { font-size: 18px; font-weight: 700; color: #212529; }
        .old-price { font-size: 14px; text-decoration: line-through; color: #adb5bd; }
        .discount { 
            background: #dc3545; color: white;
            padding: 2px 6px; border-radius: 4px; font-size: 10px; font-weight: 700; 
        }

        .product-rating { margin-bottom: 10px; font-size: 14px; }
        .rating-stars { color: #ffc107; }

        .stock-info { color: #6c757d; font-size: 12px; margin-bottom: 15px; }
        .stock-low { color: #dc3545; font-weight: 600; }

        .add-to-cart-btn { 
            width: 100%; background: <?=esc($accentCol)?>;
            color: white; border: none; padding: 10px; border-radius: 6px;
            font-size: 14px; font-weight: 600; cursor: pointer;
            transition: all 0.2s; 
        }
        .add-to-cart-btn:hover { opacity: 0.9; }
        .add-to-cart-btn:disabled { background: #adb5bd; cursor: not-allowed; }

        /* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ */
        .product-detail { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; margin-bottom: 40px; }
        .product-gallery { }
        .product-main-image { 
            width: 100%; height: 400px; background: #f8f9fa; border-radius: 8px;
            display: flex; align-items: center; justify-content: center; overflow: hidden; margin-bottom: 15px;
        }
        .product-main-image img { width: 100%; height: 100%; object-fit: cover; }
        .product-main-image .no-image { color: #adb5bd; font-size: 96px; }

        .product-detail-info { }
        .product-detail-title { font-size: 32px; font-weight: 700; margin-bottom: 15px; }
        .product-detail-description { font-size: 16px; color: #6c757d; margin-bottom: 20px; }
        .product-detail-price { margin-bottom: 25px; }
        .product-detail-price .current-price { font-size: 28px; }

        .quantity-selector { 
            display: flex; align-items: center; gap: 10px; margin: 20px 0; 
        }
        .qty-controls { display: flex; align-items: center; border: 1px solid #dee2e6; border-radius: 6px; }
        .qty-controls button { background: none; border: none; padding: 10px 15px; cursor: pointer; font-size: 18px; }
        .qty-controls input { border: none; width: 60px; text-align: center; padding: 10px 5px; font-size: 16px; }

        .product-actions { margin-bottom: 30px; }
        .add-to-cart-detail { 
            background: <?=esc($accentCol)?>; color: white; border: none; padding: 15px 30px;
            border-radius: 6px; font-size: 16px; font-weight: 600; cursor: pointer;
            width: 100%; margin-bottom: 15px;
        }

        .product-tabs { margin-bottom: 40px; }
        .tab-buttons { display: flex; border-bottom: 1px solid #dee2e6; margin-bottom: 25px; }
        .tab-btn { 
            background: none; border: none; padding: 15px 25px; font-size: 16px; font-weight: 600;
            color: #6c757d; cursor: pointer; border-bottom: 2px solid transparent; 
        }
        .tab-btn.active { color: <?=esc($accentCol)?>; border-bottom-color: <?=esc($accentCol)?>; }

        .tab-content { display: none; }
        .tab-content.active { display: block; }

        .specifications { }
        .spec-row { 
            display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #f8f9fa; 
        }
        .spec-row:last-child { border-bottom: none; }

        .reviews-section { }
        .review-item { 
            background: white; padding: 20px; border-radius: 8px; margin-bottom: 15px; border: 1px solid #e9ecef; 
        }
        .review-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px; }
        .review-author { font-weight: 600; }
        .review-date { color: #6c757d; font-size: 14px; }
        .review-rating { color: #ffc107; margin-bottom: 10px; }
        .review-text { color: #495057; line-height: 1.6; }

        .review-form { 
            background: white; padding: 25px; border-radius: 8px; border: 1px solid #e9ecef; margin-top: 25px; 
        }
        .review-form h4 { margin-bottom: 20px; }

        .cart-sidebar { 
            position: fixed; top: 0; right: -400px; width: 400px; height: 100vh;
            background: white; box-shadow: -4px 0 8px rgba(0,0,0,0.1);
            transition: all 0.3s; z-index: 1000; display: flex; flex-direction: column; 
        }
        .cart-sidebar.open { right: 0; }
        .cart-header { 
            padding: 20px; border-bottom: 1px solid #e9ecef; 
            display: flex; justify-content: space-between; align-items: center; 
        }
        .cart-body { flex: 1; overflow-y: auto; padding: 20px; }
        .cart-footer { padding: 20px; border-top: 1px solid #e9ecef; }
        .cart-close { background: none; border: none; font-size: 24px; cursor: pointer; }

        .cart-item { 
            display: flex; gap: 12px; margin-bottom: 15px; 
            padding-bottom: 15px; border-bottom: 1px solid #e9ecef; 
        }
        .cart-item-image { 
            width: 60px; height: 60px; background: #f8f9fa; border-radius: 4px;
            display: flex; align-items: center; justify-content: center; overflow: hidden; 
        }
        .cart-item-image img { width: 100%; height: 100%; object-fit: cover; }
        .cart-item-info { flex: 1; }
        .cart-item-title { font-size: 14px; font-weight: 600; margin-bottom: 4px; }
        .cart-item-price { font-size: 14px; color: #6c757d; }
        .cart-item-controls { display: flex; align-items: center; gap: 8px; margin-top: 8px; }
        .qty-btn { 
            background: #f8f9fa; border: 1px solid #dee2e6; width: 24px; height: 24px;
            display: flex; align-items: center; justify-content: center; cursor: pointer; font-size: 12px; 
        }
        .qty-input { width: 40px; text-align: center; border: 1px solid #dee2e6; padding: 2px; font-size: 12px; }
        .remove-btn { 
            background: #dc3545; color: white; border: none; padding: 2px 6px;
            border-radius: 4px; font-size: 10px; cursor: pointer; margin-left: auto; 
        }

        .cart-total { font-size: 18px; font-weight: 700; margin-bottom: 15px; text-align: center; }
        .checkout-btn { 
            width: 100%; background: #28a745; color: white; border: none;
            padding: 12px; border-radius: 6px; font-weight: 600; cursor: pointer; 
        }
        .checkout-btn:disabled { background: #adb5bd; cursor: not-allowed; }

        .modal { 
            display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background: rgba(0,0,0,0.5); z-index: 1100; align-items: center; justify-content: center; 
        }
        .modal.show { display: flex; }
        .modal-content { 
            background: white; border-radius: 8px; max-width: 500px; width: 90%;
            max-height: 90vh; overflow-y: auto; 
        }
        .modal-header { 
            padding: 20px 24px 10px; border-bottom: 1px solid #e9ecef;
            display: flex; justify-content: space-between; align-items: center; 
        }
        .modal-body { padding: 24px; }
        .modal-title { font-size: 20px; font-weight: 600; }
        .close-btn { background: none; border: none; font-size: 24px; cursor: pointer; color: #6c757d; }

        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; font-weight: 600; margin-bottom: 6px; color: #495057; }
        .form-group input, .form-group textarea, .form-group select { 
            width: 100%; padding: 10px 12px;
            border: 1px solid #ced4da; border-radius: 6px;
            font-size: 14px; 
        }
        .form-group input:focus, .form-group textarea:focus, .form-group select:focus { 
            border-color: <?=esc($accentCol)?>; outline: none; 
        }

        .rating-input { display: flex; gap: 5px; align-items: center; }
        .rating-input input[type="radio"] { display: none; }
        .rating-input label { 
            font-size: 24px; color: #ddd; cursor: pointer; transition: color 0.2s; 
        }
        .rating-input input[type="radio"]:checked ~ label,
        .rating-input label:hover,
        .rating-input label:hover ~ label { color: #ffc107; }

        .submit-btn { 
            width: 100%; background: <?=esc($accentCol)?>;
            color: white; border: none; padding: 12px; border-radius: 6px;
            font-size: 16px; font-weight: 600; cursor: pointer; 
        }

        .footer { 
            background: white; padding: 40px 0; border-top: 1px solid #e9ecef;
            text-align: center; margin-top: 60px; 
        }

        .empty-state { text-align: center; padding: 80px 20px; color: #6c757d; }
        .empty-state h3 { font-size: 24px; margin-bottom: 15px; }

        .overlay { 
            display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background: rgba(0,0,0,0.3); z-index: 999; 
        }
        .overlay.show { display: block; }

        .payment-methods { margin: 20px 0; }
        .payment-option { display: flex; align-items: center; gap: 10px; margin: 10px 0; }
        .payment-option input[type=radio] { margin: 0; width: auto; }

        @media (max-width: 768px) {
            .hero h1 { font-size: 28px; }
            .products-grid { grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px; }
            .product-detail { grid-template-columns: 1fr; gap: 20px; }
            .product-detail-title { font-size: 24px; }
            .header-content { justify-content: center; text-align: center; }
            .nav { margin-top: 10px; }
            .cart-sidebar { width: 100vw; right: -100vw; }
            .toolbar { flex-direction: column; align-items: stretch; }
            .floating-cart { bottom: 10px; right: 10px; font-size: 14px; padding: 12px 16px; }
        }

        @media (max-width: 480px) {
            .products-grid { grid-template-columns: 1fr; }
            .container { padding: 20px 15px; }
            .product-main-image { height: 250px; }
        }

        .notification {
            position: fixed; top: 20px; right: 20px; background: #28a745; color: white;
            padding: 15px 20px; border-radius: 6px; z-index: 1200; font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            animation: slideIn 0.3s ease-out;
        }

        .notification.error {
            background: #dc3545;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
    </style>
</head>
<body>
    <header class='header'>
        <div class='header-content'>
            <div class='logo'><?=esc($cfg['brand'] ?? '–ü–†–ò–ù–¢–°–°')?></div>
            <nav class='nav'>
                <a href='/'>üè† –ì–ª–∞–≤–Ω–∞—è</a>
                <a href='products.php' style='color: <?=esc($accentCol)?>; font-weight: 700;'>üõçÔ∏è –¢–æ–≤–∞—Ä—ã</a>
                <a href='/#catalog'>üìã –£—Å–ª—É–≥–∏</a>
                <a href='tel:+79522003990'>üìû +7 (952) 200-39-90</a>
            </nav>
        </div>
    </header>

    <div class='container'>
        <?php if ($productView): ?>
            <!-- –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ -->
            <div class='breadcrumbs'>
                <a href='products.php'>–¢–æ–≤–∞—Ä—ã</a>
                <span>‚Üí</span>
                <span><?=esc($productView['name'])?></span>
            </div>

            <div class='product-detail'>
                <div class='product-gallery'>
                    <div class='product-main-image'>
                        <?php if (!empty($productView['image']) && file_exists(__DIR__ . '/uploads/' . $productView['image'])): ?>
                            <img src='uploads/<?=esc($productView['image'])?>' alt='<?=esc($productView['name'])?>' loading="lazy">
                        <?php else: ?>
                            <div class='no-image'>üì¶</div>
                        <?php endif; ?>
                    </div>
                </div>

                <div class='product-detail-info'>
                    <h1 class='product-detail-title'><?=esc($productView['name'])?></h1>

                    <?php 
                    $avgRating = get_average_rating($reviews, $productView['id']);
                    $productReviews = get_product_reviews($reviews, $productView['id']);
                    ?>
                    <?php if ($avgRating > 0): ?>
                        <div class='product-rating'>
                            <span class='rating-stars'><?=render_stars($avgRating)?></span>
                            <span>(<?=$avgRating?>/5, <?=count($productReviews)?> –æ—Ç–∑—ã–≤–æ–≤)</span>
                        </div>
                    <?php endif; ?>

                    <p class='product-detail-description'><?=esc($productView['description'] ?? '')?></p>

                    <div class='product-detail-price product-price'>
                        <span class='current-price'><?=number_format((float)($productView['price'] ?? 0), 0, ',', ' ')?> ‚ÇΩ</span>
                        <?php if (!empty($productView['old_price']) && $productView['old_price'] > 0): ?>
                            <span class='old-price'><?=number_format((float)$productView['old_price'], 0, ',', ' ')?> ‚ÇΩ</span>
                            <span class='discount'>-<?=round((1 - ($productView['price'] ?? 0)/($productView['old_price'] ?? 1)) * 100)?>%</span>
                        <?php endif; ?>
                    </div>

                    <div class='stock-info <?=(($productView['stock'] ?? 0) < 5) ? 'stock-low' : ''?>'>
                        <?php $stock = (int)($productView['stock'] ?? 0); ?>
                        <?php if ($stock > 0): ?>
                            ‚úÖ –í –Ω–∞–ª–∏—á–∏–∏: <?=$stock?> —à—Ç
                            <?php if ($stock < 5): ?> (–º–∞–ª–æ!)<?php endif; ?>
                        <?php else: ?>
                            ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                        <?php endif; ?>
                    </div>

                    <?php if ($stock > 0): ?>
                        <div class='quantity-selector'>
                            <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                            <div class='qty-controls'>
                                <button onclick='changeQty(-1)'>‚àí</button>
                                <input type='number' id='productQty' value='1' min='1' max='<?=$stock?>'>
                                <button onclick='changeQty(1)'>+</button>
                            </div>
                        </div>

                        <div class='product-actions'>
                            <button class='add-to-cart-detail' 
                                    data-id='<?=(int)($productView['id'] ?? 0)?>'
                                    data-name='<?=esc($productView['name'] ?? '–¢–æ–≤–∞—Ä')?>'
                                    data-price='<?=(float)($productView['price'] ?? 0)?>'
                                    data-image='<?=esc($productView['image'] ?? '')?>'
                                    data-stock='<?=$stock?>'
                                    onclick='addToCartDetail(this)'>
                                üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                            </button>
                        </div>
                    <?php else: ?>
                        <div class='product-actions'>
                            <button class='add-to-cart-detail' disabled style='background: #adb5bd; cursor: not-allowed;'>
                                ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                            </button>
                        </div>
                    <?php endif; ?>
                </div>
            </div>

            <div class='product-tabs'>
                <div class='tab-buttons'>
                    <button class='tab-btn active' onclick='switchTab("description")'>üìñ –û–ø–∏—Å–∞–Ω–∏–µ</button>
                    <?php if (!empty($productView['specifications'])): ?>
                        <button class='tab-btn' onclick='switchTab("specs")'>üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</button>
                    <?php endif; ?>
                    <button class='tab-btn' onclick='switchTab("reviews")'>‚≠ê –û—Ç–∑—ã–≤—ã (<?=count($productReviews)?>)</button>
                </div>

                <div class='tab-content active' id='tab-description'>
                    <p><?=nl2br(esc($productView['full_description'] ?? $productView['description'] ?? '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'))?></p>
                </div>

                <?php if (!empty($productView['specifications'])): ?>
                    <div class='tab-content' id='tab-specs'>
                        <div class='specifications'>
                            <?php foreach ($productView['specifications'] as $key => $value): ?>
                                <div class='spec-row'>
                                    <strong><?=esc($key)?>:</strong>
                                    <span><?=esc($value)?></span>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                <?php endif; ?>

                <div class='tab-content' id='tab-reviews'>
                    <div class='reviews-section'>
                        <?php if (empty($productReviews)): ?>
                            <p>–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                        <?php else: ?>
                            <?php foreach ($productReviews as $review): ?>
                                <div class='review-item'>
                                    <div class='review-header'>
                                        <span class='review-author'><?=esc($review['name'])?></span>
                                        <span class='review-date'><?=date('d.m.Y', strtotime($review['date']))?></span>
                                    </div>
                                    <div class='review-rating'><?=render_stars($review['rating'])?></div>
                                    <div class='review-text'><?=nl2br(esc($review['comment']))?></div>
                                </div>
                            <?php endforeach; ?>
                        <?php endif; ?>

                        <div class='review-form'>
                            <h4>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h4>
                            <form id='reviewForm'>
                                <input type='hidden' name='mode' value='add_review'>
                                <input type='hidden' name='product_id' value='<?=(int)($productView['id'] ?? 0)?>'>

                                <div class='form-group'>
                                    <label>–í–∞—à–µ –∏–º—è *</label>
                                    <input type='text' name='name' required minlength='2' maxlength='50'>
                                </div>

                                <div class='form-group'>
                                    <label>–û—Ü–µ–Ω–∫–∞ *</label>
                                    <div class='rating-input'>
                                        <input type='radio' name='rating' value='5' id='star5'>
                                        <label for='star5'>‚òÖ</label>
                                        <input type='radio' name='rating' value='4' id='star4'>
                                        <label for='star4'>‚òÖ</label>
                                        <input type='radio' name='rating' value='3' id='star3'>
                                        <label for='star3'>‚òÖ</label>
                                        <input type='radio' name='rating' value='2' id='star2'>
                                        <label for='star2'>‚òÖ</label>
                                        <input type='radio' name='rating' value='1' id='star1'>
                                        <label for='star1'>‚òÖ</label>
                                    </div>
                                </div>

                                <div class='form-group'>
                                    <label>–û—Ç–∑—ã–≤ *</label>
                                    <textarea name='comment' rows='4' required minlength='10' maxlength='500' placeholder='–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...'></textarea>
                                </div>

                                <button type='submit' class='submit-btn'>üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</button>
                                <div id='reviewStatus' style='margin-top: 15px; text-align: center; font-weight: 600;'></div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

        <?php else: ?>
            <!-- –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
            <div class='hero'>
                <h1>üõçÔ∏è –¢–æ–≤–∞—Ä—ã –¥–ª—è —Ñ–æ—Ç–æ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤</h1>
                <p>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ—Ä–∞–º–∫–∏, –∞–ª—å–±–æ–º—ã –∏ —Å—É–≤–µ–Ω–∏—Ä—ã. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ–¥ –≤–∞—à–∏ —Ñ–æ—Ç–æ.</p>
            </div>

            <div class='toolbar'>
                <div class='filters'>
                    <a href='?cat=all' class='filter-btn <?=$filterCategory === 'all' ? 'active' : ''?>'>
                        –í—Å–µ —Ç–æ–≤–∞—Ä—ã (<?=count(array_filter($products, fn($p) => !empty($p['enabled'])))?>)
                    </a>
                    <?php foreach ($categories as $cat => $name): ?>
                        <?php $count = count(array_filter($products, fn($p) => ($p['category'] ?? '') === $cat && !empty($p['enabled']))); ?>
                        <a href='?cat=<?=esc($cat)?>' class='filter-btn <?=$filterCategory === $cat ? 'active' : ''?>'>
                            <?=esc($name)?> (<?=$count?>)
                        </a>
                    <?php endforeach; ?>
                </div>

                <button class='cart-toggle' onclick='toggleCart()'>
                    üõí –ö–æ—Ä–∑–∏–Ω–∞ <span class='cart-count' id='cartCount'>0</span>
                </button>
            </div>

            <?php if (empty($filteredProducts)): ?>
                <div class='empty-state'>
                    <div style='font-size: 64px; margin-bottom: 20px;'>üì¶</div>
                    <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                    <p>–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.</p>
                    <p style='margin-top: 20px;'><a href='?cat=all' class='filter-btn'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</a></p>
                </div>
            <?php else: ?>
                <div class='products-grid'>
                    <?php foreach ($filteredProducts as $product): ?>
                        <div class='product-card <?=!empty($product['featured']) ? 'featured' : ''?>' onclick='viewProduct(<?=(int)($product['id'] ?? 0)?>)'>
                            <div class='product-image'>
                                <?php if (!empty($product['image']) && file_exists(__DIR__ . '/uploads/' . $product['image'])): ?>
                                    <img src='uploads/<?=esc($product['image'])?>' alt='<?=esc($product['name'] ?? '–¢–æ–≤–∞—Ä')?>' loading="lazy">
                                <?php else: ?>
                                    <div class='no-image'>üì¶</div>
                                <?php endif; ?>
                            </div>

                            <div class='product-info'>
                                <h3 class='product-title'><?=esc($product['name'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')?></h3>

                                <?php 
                                $avgRating = get_average_rating($reviews, $product['id']);
                                $reviewCount = count(get_product_reviews($reviews, $product['id']));
                                ?>
                                <?php if ($avgRating > 0): ?>
                                    <div class='product-rating'>
                                        <span class='rating-stars'><?=render_stars($avgRating)?></span>
                                        <small>(<?=$reviewCount?>)</small>
                                    </div>
                                <?php endif; ?>

                                <p class='product-description'><?=esc($product['description'] ?? '')?></p>

                                <div class='product-price'>
                                    <span class='current-price'><?=number_format((float)($product['price'] ?? 0), 0, ',', ' ')?> ‚ÇΩ</span>
                                    <?php if (!empty($product['old_price']) && $product['old_price'] > 0): ?>
                                        <span class='old-price'><?=number_format((float)$product['old_price'], 0, ',', ' ')?> ‚ÇΩ</span>
                                        <span class='discount'>-<?=round((1 - ($product['price'] ?? 0)/($product['old_price'] ?? 1)) * 100)?>%</span>
                                    <?php endif; ?>
                                </div>

                                <div class='stock-info <?=(($product['stock'] ?? 0) < 5) ? 'stock-low' : ''?>'>
                                    <?php $stock = (int)($product['stock'] ?? 0); ?>
                                    <?php if ($stock > 0): ?>
                                        ‚úÖ –í –Ω–∞–ª–∏—á–∏–∏: <?=$stock?> —à—Ç
                                        <?php if ($stock < 5): ?> (–º–∞–ª–æ!)<?php endif; ?>
                                    <?php else: ?>
                                        ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                                    <?php endif; ?>
                                </div>

                                <?php if ($stock > 0): ?>
                                    <button class='add-to-cart-btn' 
                                            data-id='<?=(int)($product['id'] ?? 0)?>'
                                            data-name='<?=esc($product['name'] ?? '–¢–æ–≤–∞—Ä')?>'
                                            data-price='<?=(float)($product['price'] ?? 0)?>'
                                            data-image='<?=esc($product['image'] ?? '')?>'
                                            data-stock='<?=$stock?>'
                                            onclick='event.stopPropagation(); addToCart(this)'>
                                        üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                                    </button>
                                <?php else: ?>
                                    <button class='add-to-cart-btn' disabled>
                                        ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                                    </button>
                                <?php endif; ?>
                            </div>
                        </div>
                    <?php endforeach; ?>
                </div>
            <?php endif; ?>
        <?php endif; ?>
    </div>

    <!-- –ü–ª–∞–≤–∞—é—â–∞—è –∫–æ—Ä–∑–∏–Ω–∞ -->
    <div class='floating-cart' id='floatingCart' onclick='toggleCart()'>
        üõí <span id='floatingCartCount'>0</span> —Ç–æ–≤–∞—Ä–æ–≤
    </div>

    <!-- Overlay –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã -->
    <div class='overlay' id='cartOverlay' onclick='closeCart()'></div>

    <!-- –ö–æ—Ä–∑–∏–Ω–∞ -->
    <div class='cart-sidebar' id='cartSidebar'>
        <div class='cart-header'>
            <h3>üõí –ö–æ—Ä–∑–∏–Ω–∞</h3>
            <button class='cart-close' onclick='closeCart()' aria-label="–ó–∞–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É">&times;</button>
        </div>
        <div class='cart-body' id='cartBody'>
            <div style='text-align: center; color: #6c757d; padding: 40px 20px;'>
                <div style='font-size: 48px; margin-bottom: 15px;'>üõí</div>
                <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                <small style='color: #adb5bd;'>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑</small>
            </div>
        </div>
        <div class='cart-footer'>
            <div class='cart-total' id='cartTotal'>–ò—Ç–æ–≥–æ: 0 ‚ÇΩ</div>
            <button class='checkout-btn' onclick='openCheckout()' id='checkoutBtn' disabled>
                üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
            </button>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ -->
    <div id='checkoutModal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <h2 class='modal-title'>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
                <button class='close-btn' onclick='closeCheckout()' aria-label="–ó–∞–∫—Ä—ã—Ç—å">&times;</button>
            </div>
            <div class='modal-body'>
                <form id='checkoutForm'>
                    <input type='hidden' name='mode' value='cart_order'>
                    <input type='hidden' name='cart' id='cartData'>

                    <div class='form-group'>
                        <label for='customerName'>üë§ –í–∞—à–µ –∏–º—è *</label>
                        <input type='text' id='customerName' name='name' required minlength="2" maxlength="100" placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'>
                    </div>

                    <div class='form-group'>
                        <label for='customerPhone'>üìû –¢–µ–ª–µ—Ñ–æ–Ω *</label>
                        <input type='tel' id='customerPhone' name='phone' required placeholder='+7 (999) 123-45-67'>
                    </div>

                    <div class='form-group'>
                        <label for='customerComment'>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                        <textarea id='customerComment' name='comment' rows='3' maxlength="500" placeholder='–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã...'></textarea>
                    </div>

                    <?php if (!empty($cfg['yukassa']['enabled'])): ?>
                    <div class='payment-methods'>
                        <div style='font-weight: 600; margin-bottom: 10px;'>üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</div>
                        <div class='payment-option'>
                            <input type='radio' id='payment_offline' name='payment_method' value='offline' checked>
                            <label for='payment_offline'>–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ (–Ω–∞–ª–∏—á–Ω—ã–µ/–∫–∞—Ä—Ç–∞)</label>
                        </div>
                        <div class='payment-option'>
                            <input type='radio' id='payment_online' name='payment_method' value='online'>
                            <label for='payment_online'>üí∏ –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ (–Æ–ö–∞—Å—Å–∞)</label>
                        </div>
                    </div>
                    <?php endif; ?>

                    <div style='background: #f8f9fa; padding: 15px; border-radius: 6px; margin-bottom: 20px;'>
                        <div style='font-weight: 600; margin-bottom: 10px;'>üìã –í–∞—à –∑–∞–∫–∞–∑:</div>
                        <div id='orderSummary'></div>
                        <hr style='margin: 10px 0; border: none; border-top: 1px solid #dee2e6;'>
                        <div style='font-weight: 700; font-size: 18px; text-align: center;' id='orderTotal'></div>
                    </div>

                    <button type='submit' class='submit-btn'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑</button>
                    <div id='checkoutStatus' style='margin-top: 15px; text-align: center; font-weight: 600;'></div>
                </form>
            </div>
        </div>
    </div>

    <footer class='footer'>
        <div style='max-width: 1200px; margin: 0 auto; padding: 0 20px;'>
            <p><strong><?=esc($cfg['brand'] ?? '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°')?></strong></p>
            <p><?=esc($cfg['address'] ?? '–≥. –°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —É–ª. –ö—Ä–∞—Å–Ω—ã—Ö –§–æ—Ä—Ç–æ–≤, 49')?></p>
            <p style='margin-top: 10px;'>
                <a href='tel:+79522003990' style='color: <?=esc($accentCol)?>; font-weight: 600;'>üìû +7 (952) 200-39-90</a> ‚Ä¢ 
                <a href='mailto:artcopy78@bk.ru' style='color: <?=esc($accentCol)?>; font-weight: 600;'>‚úâÔ∏è artcopy78@bk.ru</a>
            </p>
        </div>
    </footer>

    <script>
        // –ö–æ—Ä–∑–∏–Ω–∞
        let cart = [];

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        try {
            const savedCart = localStorage.getItem('cart');
            if (savedCart) {
                const parsedCart = JSON.parse(savedCart);
                if (Array.isArray(parsedCart)) {
                    cart = parsedCart.filter(item => 
                        item && 
                        typeof item.id === 'number' && 
                        typeof item.name === 'string' && 
                        typeof item.price === 'number' && 
                        typeof item.quantity === 'number' &&
                        item.quantity > 0
                    );
                }
            }
        } catch (e) {
            console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã:', e);
            cart = [];
        }

        function saveCart() {
            try {
                localStorage.setItem('cart', JSON.stringify(cart));
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', e);
            }
        }

        function viewProduct(productId) {
            window.location.href = `products.php?product=${productId}`;
        }

        function addToCart(button) {
            try {
                const id = parseInt(button.dataset.id);
                const name = button.dataset.name;
                const price = parseFloat(button.dataset.price);
                const image = button.dataset.image;
                const stock = parseInt(button.dataset.stock);

                // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
                if (!id || !name || !price || price <= 0 || !stock || stock <= 0) {
                    showNotification('–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞', 'error');
                    return;
                }

                const existingItem = cart.find(item => item.id === id);

                if (existingItem) {
                    if (existingItem.quantity < stock) {
                        existingItem.quantity++;
                        showNotification(`–£–≤–µ–ª–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ "${name}" –≤ –∫–æ—Ä–∑–∏–Ω–µ`);
                    } else {
                        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ', 'error');
                        return;
                    }
                } else {
                    cart.push({
                        id: id,
                        name: name,
                        price: price,
                        image: image,
                        quantity: 1,
                        stock: stock
                    });
                    showNotification(`–¢–æ–≤–∞—Ä "${name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
                }

                saveCart();
                updateCartUI();
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', e);
                showNotification('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
            }
        }

        function addToCartDetail(button) {
            try {
                const id = parseInt(button.dataset.id);
                const name = button.dataset.name;
                const price = parseFloat(button.dataset.price);
                const image = button.dataset.image;
                const stock = parseInt(button.dataset.stock);
                const quantity = parseInt(document.getElementById('productQty').value) || 1;

                // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
                if (!id || !name || !price || price <= 0 || !stock || stock <= 0) {
                    showNotification('–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞', 'error');
                    return;
                }

                if (quantity <= 0 || quantity > stock) {
                    showNotification('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'error');
                    return;
                }

                const existingItem = cart.find(item => item.id === id);

                if (existingItem) {
                    if (existingItem.quantity + quantity <= stock) {
                        existingItem.quantity += quantity;
                        showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${quantity} —à—Ç. "${name}" –≤ –∫–æ—Ä–∑–∏–Ω—É`);
                    } else {
                        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ', 'error');
                        return;
                    }
                } else {
                    cart.push({
                        id: id,
                        name: name,
                        price: price,
                        image: image,
                        quantity: quantity,
                        stock: stock
                    });
                    showNotification(`–¢–æ–≤–∞—Ä "${name}" (${quantity} —à—Ç) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
                }

                saveCart();
                updateCartUI();
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', e);
                showNotification('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
            }
        }

        function changeQty(delta) {
            const qtyInput = document.getElementById('productQty');
            if (!qtyInput) return;

            const currentQty = parseInt(qtyInput.value) || 1;
            const newQty = currentQty + delta;
            const maxQty = parseInt(qtyInput.getAttribute('max')) || 999;

            if (newQty >= 1 && newQty <= maxQty) {
                qtyInput.value = newQty;
            }
        }

        function removeFromCart(productId) {
            try {
                cart = cart.filter(item => item.id !== productId);
                saveCart();
                updateCartUI();
                showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã:', e);
            }
        }

        function updateQuantity(productId, newQuantity) {
            try {
                const item = cart.find(item => item.id === productId);
                if (item) {
                    newQuantity = parseInt(newQuantity);
                    if (isNaN(newQuantity) || newQuantity < 0) {
                        return;
                    }

                    if (newQuantity === 0) {
                        removeFromCart(productId);
                        return;
                    }

                    if (newQuantity <= item.stock) {
                        item.quantity = newQuantity;
                        saveCart();
                        updateCartUI();
                    } else {
                        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ', 'error');
                        updateCartUI(); // –û–±–Ω–æ–≤–ª—è–µ–º UI –¥–ª—è —Å–±—Ä–æ—Å–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                    }
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞:', e);
            }
        }

        function updateCartUI() {
            try {
                const cartCount = document.getElementById('cartCount');
                const floatingCartCount = document.getElementById('floatingCartCount');
                const floatingCart = document.getElementById('floatingCart');
                const cartBody = document.getElementById('cartBody');
                const cartTotal = document.getElementById('cartTotal');
                const checkoutBtn = document.getElementById('checkoutBtn');

                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

                cartCount.textContent = totalItems;
                floatingCartCount.textContent = totalItems;
                cartTotal.textContent = '–ò—Ç–æ–≥–æ: ' + totalPrice.toLocaleString('ru-RU') + ' ‚ÇΩ';

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–æ—Ä–∑–∏–Ω—É –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã
                if (totalItems > 0) {
                    floatingCart.classList.add('show');
                } else {
                    floatingCart.classList.remove('show');
                }

                if (cart.length === 0) {
                    cartBody.innerHTML = `
                        <div style='text-align: center; color: #6c757d; padding: 40px 20px;'>
                            <div style='font-size: 48px; margin-bottom: 15px;'>üõí</div>
                            <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                            <small style='color: #adb5bd;'>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑</small>
                        </div>
                    `;
                    checkoutBtn.disabled = true;
                } else {
                    cartBody.innerHTML = cart.map(item => `
                        <div class='cart-item'>
                            <div class='cart-item-image'>
                                ${item.image ? `<img src='uploads/${escapeHtml(item.image)}' alt='${escapeHtml(item.name)}'>` : '<div style="color: #adb5bd; font-size: 24px;">üì¶</div>'}
                            </div>
                            <div class='cart-item-info'>
                                <div class='cart-item-title'>${escapeHtml(item.name)}</div>
                                <div class='cart-item-price'>${item.price.toLocaleString('ru-RU')} ‚ÇΩ</div>
                                <div class='cart-item-controls'>
                                    <button class='qty-btn' onclick='updateQuantity(${item.id}, ${item.quantity - 1})'>‚àí</button>
                                    <input type='number' class='qty-input' value='${item.quantity}' min='1' max='${item.stock}'
                                           onchange='updateQuantity(${item.id}, parseInt(this.value))'>
                                    <button class='qty-btn' onclick='updateQuantity(${item.id}, ${item.quantity + 1})'>+</button>
                                    <button class='remove-btn' onclick='removeFromCart(${item.id})' title='–£–¥–∞–ª–∏—Ç—å'>üóëÔ∏è</button>
                                </div>
                            </div>
                        </div>
                    `).join('');
                    checkoutBtn.disabled = false;
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', e);
            }
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function toggleCart() {
            const sidebar = document.getElementById('cartSidebar');
            const overlay = document.getElementById('cartOverlay');

            sidebar.classList.toggle('open');
            overlay.classList.toggle('show');
        }

        function closeCart() {
            const sidebar = document.getElementById('cartSidebar');
            const overlay = document.getElementById('cartOverlay');

            sidebar.classList.remove('open');
            overlay.classList.remove('show');
        }

        function openCheckout() {
            if (cart.length === 0) return;

            try {
                const modal = document.getElementById('checkoutModal');
                const orderSummary = document.getElementById('orderSummary');
                const orderTotal = document.getElementById('orderTotal');
                const cartData = document.getElementById('cartData');

                const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

                orderSummary.innerHTML = cart.map(item => `
                    <div style='display: flex; justify-content: space-between; margin-bottom: 8px; font-size: 14px;'>
                        <span>${escapeHtml(item.name)} √ó ${item.quantity}</span>
                        <span>${(item.price * item.quantity).toLocaleString('ru-RU')} ‚ÇΩ</span>
                    </div>
                `).join('');

                orderTotal.textContent = '–ò—Ç–æ–≥–æ: ' + totalPrice.toLocaleString('ru-RU') + ' ‚ÇΩ';
                cartData.value = JSON.stringify(cart);

                modal.classList.add('show');
                closeCart();
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:', e);
                showNotification('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞', 'error');
            }
        }

        function closeCheckout() {
            document.getElementById('checkoutModal').classList.remove('show');
            document.getElementById('checkoutForm').reset();
            document.getElementById('checkoutStatus').textContent = '';
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = 'notification';
            if (type === 'error') notification.classList.add('error');
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // –¢–∞–±—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
        function switchTab(tabName) {
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ç–∞–±—ã
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });

            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —Ç–∞–±
            const targetTab = document.getElementById('tab-' + tabName);
            if (targetTab) {
                targetTab.classList.add('active');
            }

            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É
            event.target.classList.add('active');
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
        document.getElementById('checkoutForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const status = document.getElementById('checkoutStatus');
            const submitBtn = e.target.querySelector('button[type="submit"]');

            status.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑...';
            status.style.color = '<?=esc($accentCol)?>';
            submitBtn.disabled = true;

            try {
                const formData = new FormData(e.target);

                // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
                const name = formData.get('name')?.trim();
                const phone = formData.get('phone')?.trim();

                if (!name || name.length < 2) {
                    throw new Error('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è');
                }

                if (!phone || phone.length < 10) {
                    throw new Error('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω');
                }

                const response = await fetch(window.location.href, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }

                const result = await response.json();

                if (result.ok) {
                    status.textContent = '‚úÖ ' + result.message;
                    status.style.color = '#28a745';

                    if (result.payment && result.payment_url) {
                        status.textContent += ' –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ...';
                        setTimeout(() => {
                            window.open(result.payment_url, '_blank');
                        }, 1500);
                    }

                    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
                    cart = [];
                    saveCart();
                    updateCartUI();

                    setTimeout(() => {
                        closeCheckout();
                        showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
                    }, result.payment ? 3000 : 2000);
                } else {
                    status.textContent = '‚ùå ' + (result.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
                    status.style.color = '#dc3545';
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
                status.textContent = '‚ùå ' + (error.message || '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                status.style.color = '#dc3545';
            } finally {
                submitBtn.disabled = false;
            }
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞
        const reviewForm = document.getElementById('reviewForm');
        if (reviewForm) {
            reviewForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const status = document.getElementById('reviewStatus');
                const submitBtn = e.target.querySelector('button[type="submit"]');

                status.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤...';
                status.style.color = '<?=esc($accentCol)?>';
                submitBtn.disabled = true;

                try {
                    const formData = new FormData(e.target);

                    const response = await fetch(window.location.href, {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}`);
                    }

                    const result = await response.json();

                    if (result.ok) {
                        status.textContent = '‚úÖ ' + result.message;
                        status.style.color = '#28a745';
                        e.target.reset();

                        setTimeout(() => {
                            status.textContent = '';
                        }, 3000);
                    } else {
                        status.textContent = '‚ùå ' + (result.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
                        status.style.color = '#dc3545';
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞:', error);
                    status.textContent = '‚ùå ' + (error.message || '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.');
                    status.style.color = '#dc3545';
                } finally {
                    submitBtn.disabled = false;
                }
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.getElementById('checkoutModal').addEventListener('click', (e) => {
            if (e.target.id === 'checkoutModal') {
                closeCheckout();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                if (document.getElementById('checkoutModal').classList.contains('show')) {
                    closeCheckout();
                } else if (document.getElementById('cartSidebar').classList.contains('open')) {
                    closeCart();
                }
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {
            updateCartUI();
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Ç–æ–≤–∞—Ä–æ–≤:', cart.length);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤–µ–∑–¥–æ—á–µ–∫ –≤ —Ñ–æ—Ä–º–µ –æ—Ç–∑—ã–≤–æ–≤
            const ratingInputs = document.querySelectorAll('.rating-input input[type="radio"]');
            ratingInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const value = this.value;
                    const labels = this.parentNode.querySelectorAll('label');
                    labels.forEach((label, index) => {
                        if (index >= (5 - value)) {
                            label.style.color = '#ffc107';
                        } else {
                            label.style.color = '#ddd';
                        }
                    });
                });
            });
        });
    </script>
</body>
</html>
