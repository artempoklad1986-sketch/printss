<?php
mb_internal_encoding('UTF-8');
date_default_timezone_set('Europe/Moscow');
session_start();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥
$BASE = __DIR__;
$configFile = $BASE.'/config.json';
$productsFile = $BASE.'/products.json';
$ordersLog = $BASE.'/orders.txt';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –∏ —Ç–æ–≤–∞—Ä—ã
$cfg = json_decode(@file_get_contents($configFile), true) ?? [];
$products = json_decode(@file_get_contents($productsFile), true) ?? [];

/* –•–µ–ª–ø–µ—Ä—ã */
function esc($s){ return htmlspecialchars((string)$s, ENT_QUOTES|ENT_SUBSTITUTE, 'UTF-8'); }
function sanitize_text($s){ return trim(filter_var($s, FILTER_SANITIZE_FULL_SPECIAL_CHARS)); }

function log_order($path, $data){
    @file_put_contents($path, '['.date('Y-m-d H:i:s').'] '.json_encode($data, JSON_UNESCAPED_UNICODE).PHP_EOL, FILE_APPEND);
}

function send_email_simple($to, $subject, $body) {
    $headers = "From: noreply@printss.ru\r\nContent-Type: text/plain; charset=UTF-8\r\n";
    return @mail($to, '=?UTF-8?B?'.base64_encode($subject).'?=', $body, $headers);
}

function tg_send_message($cfg, $text) {
    if(empty($cfg['telegram']['enabled'])) return false;
    $token = $cfg['telegram']['token'] ?? '';
    $chat = $cfg['telegram']['chat'] ?? '';
    if(!$token || !$chat) return false;

    $url = "https://api.telegram.org/bot$token/sendMessage";
    $data = [
        'chat_id' => $chat,
        'text' => $text,
        'parse_mode' => 'HTML'
    ];

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
    $result = curl_exec($ch);
    curl_close($ch);

    return $result !== false;
}

function yukassa_create_payment($cfg, $amount, $description, $order_id){
    if(empty($cfg['yukassa']['enabled'])) return [false, 'Payments disabled'];

    $shop_id = $cfg['yukassa']['shop_id'];
    $secret_key = $cfg['yukassa']['secret_key'];
    $return_url = $cfg['yukassa']['return_url'] ?? ($cfg['site'] . '/payment_result.php');

    if(!$shop_id || !$secret_key) return [false, 'Missing shop_id or secret_key'];

    $url = 'https://api.yookassa.ru/v3/payments';

    $data = [
        'amount' => ['value' => number_format($amount, 2, '.', ''), 'currency' => 'RUB'],
        'confirmation' => ['type' => 'redirect', 'return_url' => $return_url . '?order_id=' . urlencode($order_id)],
        'description' => $description,
        'metadata' => ['order_id' => (string)$order_id],
        'capture' => true
    ];

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Idempotence-Key: ' . uniqid(),
        'Authorization: Basic ' . base64_encode($shop_id . ':' . $secret_key)
    ]);

    $result = curl_exec($ch);
    $error = curl_error($ch);
    curl_close($ch);

    if($error) return [false, 'CURL error: ' . $error];

    $response = json_decode($result, true);
    if(!$response || !isset($response['confirmation']['confirmation_url'])) {
        return [false, 'Invalid response: ' . $result];
    }

    return [true, $response];
}

function send_order_notifications($cfg, $order, $ordersLog) {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ email
    $emailBody = "–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–∞–π—Ç–∞\n\nID –∑–∞–∫–∞–∑–∞: {$order['id']}\n\n";
    foreach ($order['items'] as $item) {
        $emailBody .= "‚Ä¢ {$item['name']} - {$item['price']} ‚ÇΩ √ó {$item['quantity']} —à—Ç = {$item['total']} ‚ÇΩ\n";
    }
    $emailBody .= "\n–ò—Ç–æ–≥–æ: {$order['total_price']} ‚ÇΩ\n\n";
    $emailBody .= "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {$order['name']}\n";
    $emailBody .= "–¢–µ–ª–µ—Ñ–æ–Ω: {$order['phone']}\n";
    if ($order['comment']) $emailBody .= "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {$order['comment']}\n";
    $emailBody .= "–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: " . ($order['payment_method'] === 'online' ? '–û–Ω–ª–∞–π–Ω (–û–ü–õ–ê–ß–ï–ù)' : '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏') . "\n";
    $emailBody .= "IP: {$order['ip']}\n\n";
    $emailBody .= "–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∑–∞–∫–∞–∑ –≤ –∞–¥–º–∏–Ω–∫–µ!";

    send_email_simple($cfg['email_to'] ?? 'artcopy78@bk.ru', '–ó–∞–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã #'.$order['id'], $emailBody);

    // Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    $tgMsg = "üõí <b>–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ #{$order['id']}</b>\n\n";
    foreach ($order['items'] as $item) {
        $tgMsg .= "‚Ä¢ {$item['name']} √ó {$item['quantity']} = " . number_format($item['total']) . " ‚ÇΩ\n";
    }
    $tgMsg .= "\nüí∞ <b>–ò—Ç–æ–≥–æ: " . number_format($order['total_price']) . " ‚ÇΩ</b>\n\n";
    $tgMsg .= "üë§ {$order['name']}\nüìû {$order['phone']}\n";
    if ($order['comment']) $tgMsg .= "üí¨ {$order['comment']}\n";

    if ($order['payment_method'] === 'online') {
        $tgMsg .= "üí≥ –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ ‚úÖ <b>–û–ü–õ–ê–ß–ï–ù</b>";
    } else {
        $tgMsg .= "üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏";
    }

    tg_send_message($cfg, $tgMsg);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –∫–æ—Ä–∑–∏–Ω—ã
if ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['mode'] ?? '') === 'cart_order') {
    header('Content-Type: application/json; charset=utf-8');
    try {
        $name = sanitize_text($_POST['name'] ?? '');
        $phone = sanitize_text($_POST['phone'] ?? '');
        $comment = sanitize_text($_POST['comment'] ?? '');
        $cart = json_decode($_POST['cart'] ?? '[]', true);
        $payment_method = sanitize_text($_POST['payment_method'] ?? 'offline');

        if (!$name || !$phone) throw new Exception('–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω.');
        if (empty($cart)) throw new Exception('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.');

        $totalPrice = 0;
        $orderItems = [];

        foreach ($cart as $item) {
            $product = null;
            foreach ($products as $p) {
                if ($p['id'] == $item['id'] && $p['enabled']) {
                    $product = $p;
                    break;
                }
            }

            if (!$product) continue;
            if ($product['stock'] < $item['quantity']) throw new Exception('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ: ' . $product['name']);

            $itemTotal = $product['price'] * $item['quantity'];
            $totalPrice += $itemTotal;
            $orderItems[] = [
                'product_id'=>$product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $item['quantity'],
                'total' => $itemTotal
            ];
        }

        $order_id = 'cart_'.time().'_'.rand(1000,9999);

        $order = [
            'id'=>$order_id,
            'type' => 'cart',
            'ts' => date('Y-m-d H:i:s'),
            'items' => $orderItems,
            'total_price' => $totalPrice,
            'name' => $name,
            'phone' => $phone,
            'comment' => $comment,
            'payment_method' => $payment_method,
            'ip' => $_SERVER['REMOTE_ADDR'] ?? '',
            'status' => $payment_method === 'online' ? 'pending_payment' : 'new'
        ];

        // –í—Å–µ–≥–¥–∞ –ª–æ–≥–∏—Ä—É–µ–º –∑–∞–∫–∞–∑
        log_order($ordersLog, $order);

        $response = ['ok' => true, 'order_id' => $order_id];

        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –†–∞–∑–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ—Ñ–ª–∞–π–Ω –∑–∞–∫–∞–∑–æ–≤
        if ($payment_method === 'online' && $totalPrice > 0) {
            // –î–ª—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã - –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ä–∞–∑—É
            list($payOk, $payResult) = yukassa_create_payment($cfg, $totalPrice, "–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ #$order_id", $order_id);
            if ($payOk) {
                $response['payment'] = true;
                $response['payment_url'] = $payResult['confirmation']['confirmation_url'];
                $response['payment_id'] = $payResult['id'];
                $response['message'] = '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ...';
            } else {
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –∑–∞–∫–∞–∑
                $order['status'] = 'new';
                $order['payment_method'] = 'offline';
                log_order($ordersLog, ['updated_order' => $order]);
                send_order_notifications($cfg, $order, $ordersLog);
                $response['message'] = '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ' . $payResult . '. –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏.';
            }
        } else {
            // –î–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω –∑–∞–∫–∞–∑–æ–≤ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ä–∞–∑—É
            send_order_notifications($cfg, $order, $ordersLog);
            $response['message'] = '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.';
        }

        echo json_encode($response);
        exit;

    } catch (Exception $e) {
        echo json_encode(['ok' => false, 'message' => $e->getMessage()]);
        exit;
    }
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
$categories = [
    'frames' => 'üñºÔ∏è –§–æ—Ç–æ—Ä–∞–º–∫–∏',
    'albums' => 'üìö –§–æ—Ç–æ–∞–ª—å–±–æ–º—ã', 
    'souvenirs' => 'üéÅ –°—É–≤–µ–Ω–∏—Ä—ã'
];

$filterCategory = $_GET['cat'] ?? 'all';
$filteredProducts = $filterCategory === 'all' ? $products : array_filter($products, fn($p) => $p['category'] === $filterCategory);
$filteredProducts = array_filter($filteredProducts, fn($p) => $p['enabled']); // –¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: —Å–Ω–∞—á–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ, –ø–æ—Ç–æ–º –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
usort($filteredProducts, function($a, $b) {
    if ($a['featured'] && !$b['featured']) return -1;
    if (!$a['featured'] && $b['featured']) return 1;
    return strcasecmp($a['name'], $b['name']);
});

// –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
$T = $cfg['theme'] ?? [];
$brandCol = $T['brand'] ?? '#FF8A00';
$accentCol = $T['accent'] ?? '#2D5BFF';
?>
<!doctype html>
<html lang='ru'>
<head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <title>–¢–æ–≤–∞—Ä—ã - <?=esc($cfg['brand'] ?? '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°')?></title>
    <meta name='description' content='–§–æ—Ç–æ—Ä–∞–º–∫–∏, —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º—ã, –∫—Ä—É–∂–∫–∏ —Å —Ñ–æ—Ç–æ, –º–∞–≥–Ω–∏—Ç—ã –∏ –¥—Ä—É–≥–∏–µ —Å—É–≤–µ–Ω–∏—Ä—ã. –ë—ã—Å—Ç—Ä–æ–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –°–æ—Å–Ω–æ–≤–æ–º –ë–æ—Ä—É.'>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
            background: #f8f9fa; color: #212529; line-height: 1.5; 
        }

        .header { 
            background: white; border-bottom: 1px solid #e9ecef; padding: 1rem 0; 
            position: sticky; top: 0; z-index: 100; box-shadow: 0 2px 4px rgba(0,0,0,0.1); 
        }
        .header-content { 
            max-width: 1200px; margin: 0 auto; padding: 0 20px;
            display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 15px; 
        }
        .logo { font-size: 24px; font-weight: 700; color: <?=$brandCol?>; }
        .nav a { margin: 0 15px; color: #6c757d; font-weight: 500; text-decoration: none; }
        .nav a:hover { color: <?=$accentCol?>; }

        .container { max-width: 1200px; margin: 0 auto; padding: 40px 20px; }

        .hero { text-align: center; margin-bottom: 40px; }
        .hero h1 { font-size: 36px; font-weight: 700; margin-bottom: 15px; color: #212529; }
        .hero p { font-size: 18px; color: #6c757d; margin-bottom: 25px; }

        .toolbar { 
            display: flex; justify-content: space-between; align-items: center; 
            margin-bottom: 30px; flex-wrap: wrap; gap: 15px; 
        }
        .filters { display: flex; gap: 10px; flex-wrap: wrap; }
        .filter-btn { 
            display: inline-block; padding: 8px 16px; border-radius: 6px;
            background: white; border: 1px solid #dee2e6;
            color: #495057; font-weight: 500; text-decoration: none;
            transition: all 0.2s; font-size: 14px; 
        }
        .filter-btn:hover, .filter-btn.active { background: <?=$accentCol?>; color: white; border-color: <?=$accentCol?>; }

        .cart-toggle { 
            background: <?=$brandCol?>; color: white; border: none; padding: 10px 16px;
            border-radius: 6px; font-weight: 600; cursor: pointer; position: relative; 
        }
        .cart-count { 
            position: absolute; top: -8px; right: -8px; background: #dc3545; color: white;
            border-radius: 50%; min-width: 20px; height: 20px; font-size: 12px;
            display: flex; align-items: center; justify-content: center; 
        }

        .products-grid { 
            display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px; margin-bottom: 50px; 
        }

        .product-card { 
            background: white; border: 1px solid #e9ecef; border-radius: 8px;
            overflow: hidden; transition: all 0.2s; position: relative; 
        }
        .product-card:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.1); transform: translateY(-2px); }
        .product-card.featured::before { 
            content: '–•–ò–¢'; position: absolute; top: 10px; right: 10px;
            background: #dc3545; color: white;
            padding: 4px 8px; border-radius: 4px; font-size: 10px;
            font-weight: 700; z-index: 10; 
        }

        .product-image { 
            height: 200px; background: #f8f9fa; display: flex; align-items: center;
            justify-content: center; overflow: hidden; 
        }
        .product-image img { width: 100%; height: 100%; object-fit: cover; }
        .product-image .no-image { color: #adb5bd; font-size: 48px; }

        .product-info { padding: 20px; }
        .product-title { font-size: 16px; font-weight: 600; margin-bottom: 8px; color: #212529; }
        .product-description { color: #6c757d; margin-bottom: 12px; font-size: 14px; }
        .product-price { display: flex; align-items: baseline; gap: 8px; margin-bottom: 15px; }
        .current-price { font-size: 18px; font-weight: 700; color: #212529; }
        .old-price { font-size: 14px; text-decoration: line-through; color: #adb5bd; }
        .discount { 
            background: #dc3545; color: white;
            padding: 2px 6px; border-radius: 4px; font-size: 10px; font-weight: 700; 
        }

        .stock-info { color: #6c757d; font-size: 12px; margin-bottom: 15px; }
        .stock-low { color: #dc3545; font-weight: 600; }

        .add-to-cart-btn { 
            width: 100%; background: <?=$accentCol?>;
            color: white; border: none; padding: 10px; border-radius: 6px;
            font-size: 14px; font-weight: 600; cursor: pointer;
            transition: all 0.2s; 
        }
        .add-to-cart-btn:hover { opacity: 0.9; }
        .add-to-cart-btn:disabled { background: #adb5bd; cursor: not-allowed; }

        .cart-sidebar { 
            position: fixed; top: 0; right: -400px; width: 400px; height: 100vh;
            background: white; box-shadow: -4px 0 8px rgba(0,0,0,0.1);
            transition: all 0.3s; z-index: 1000; display: flex; flex-direction: column; 
        }
        .cart-sidebar.open { right: 0; }
        .cart-header { 
            padding: 20px; border-bottom: 1px solid #e9ecef; 
            display: flex; justify-content: space-between; align-items: center; 
        }
        .cart-body { flex: 1; overflow-y: auto; padding: 20px; }
        .cart-footer { padding: 20px; border-top: 1px solid #e9ecef; }
        .cart-close { background: none; border: none; font-size: 24px; cursor: pointer; }

        .cart-item { 
            display: flex; gap: 12px; margin-bottom: 15px; 
            padding-bottom: 15px; border-bottom: 1px solid #e9ecef; 
        }
        .cart-item-image { 
            width: 60px; height: 60px; background: #f8f9fa; border-radius: 4px;
            display: flex; align-items: center; justify-content: center; overflow: hidden; 
        }
        .cart-item-image img { width: 100%; height: 100%; object-fit: cover; }
        .cart-item-info { flex: 1; }
        .cart-item-title { font-size: 14px; font-weight: 600; margin-bottom: 4px; }
        .cart-item-price { font-size: 14px; color: #6c757d; }
        .cart-item-controls { display: flex; align-items: center; gap: 8px; margin-top: 8px; }
        .qty-btn { 
            background: #f8f9fa; border: 1px solid #dee2e6; width: 24px; height: 24px;
            display: flex; align-items: center; justify-content: center; cursor: pointer; font-size: 12px; 
        }
        .qty-input { width: 40px; text-align: center; border: 1px solid #dee2e6; padding: 2px; font-size: 12px; }
        .remove-btn { 
            background: #dc3545; color: white; border: none; padding: 2px 6px;
            border-radius: 4px; font-size: 10px; cursor: pointer; margin-left: auto; 
        }

        .cart-total { font-size: 18px; font-weight: 700; margin-bottom: 15px; text-align: center; }
        .checkout-btn { 
            width: 100%; background: #28a745; color: white; border: none;
            padding: 12px; border-radius: 6px; font-weight: 600; cursor: pointer; 
        }
        .checkout-btn:disabled { background: #adb5bd; cursor: not-allowed; }

        .modal { 
            display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background: rgba(0,0,0,0.5); z-index: 1100; align-items: center; justify-content: center; 
        }
        .modal.show { display: flex; }
        .modal-content { 
            background: white; border-radius: 8px; max-width: 500px; width: 90%;
            max-height: 90vh; overflow-y: auto; 
        }
        .modal-header { 
            padding: 20px 24px 10px; border-bottom: 1px solid #e9ecef;
            display: flex; justify-content: space-between; align-items: center; 
        }
        .modal-body { padding: 24px; }
        .modal-title { font-size: 20px; font-weight: 600; }
        .close-btn { background: none; border: none; font-size: 24px; cursor: pointer; color: #6c757d; }

        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; font-weight: 600; margin-bottom: 6px; color: #495057; }
        .form-group input, .form-group textarea { 
            width: 100%; padding: 10px 12px;
            border: 1px solid #ced4da; border-radius: 6px;
            font-size: 14px; 
        }
        .form-group input:focus, .form-group textarea:focus { border-color: <?=$accentCol?>; outline: none; }

        .submit-btn { 
            width: 100%; background: <?=$accentCol?>;
            color: white; border: none; padding: 12px; border-radius: 6px;
            font-size: 16px; font-weight: 600; cursor: pointer; 
        }

        .footer { 
            background: white; padding: 40px 0; border-top: 1px solid #e9ecef;
            text-align: center; margin-top: 60px; 
        }

        .empty-state { text-align: center; padding: 80px 20px; color: #6c757d; }
        .empty-state h3 { font-size: 24px; margin-bottom: 15px; }

        .overlay { 
            display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background: rgba(0,0,0,0.3); z-index: 999; 
        }
        .overlay.show { display: block; }

        .payment-methods { margin: 20px 0; }
        .payment-option { display: flex; align-items: center; gap: 10px; margin: 10px 0; }
        .payment-option input[type=radio] { margin: 0; width: auto; }

        @media (max-width: 768px) {
            .hero h1 { font-size: 28px; }
            .products-grid { grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px; }
            .header-content { justify-content: center; text-align: center; }
            .nav { margin-top: 10px; }
            .cart-sidebar { width: 100vw; right: -100vw; }
            .toolbar { flex-direction: column; align-items: stretch; }
        }

        @media (max-width: 480px) {
            .products-grid { grid-template-columns: 1fr; }
            .container { padding: 20px 15px; }
        }

        .notification {
            position: fixed; top: 20px; right: 20px; background: #28a745; color: white;
            padding: 15px 20px; border-radius: 6px; z-index: 1200; font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
    </style>
</head>
<body>
    <header class='header'>
        <div class='header-content'>
            <div class='logo'><?=esc($cfg['brand'] ?? '–ü–†–ò–ù–¢–°–°')?></div>
            <nav class='nav'>
                <a href='/'>üè† –ì–ª–∞–≤–Ω–∞—è</a>
                <a href='products.php' style='color: <?=$accentCol?>; font-weight: 700;'>üõçÔ∏è –¢–æ–≤–∞—Ä—ã</a>
                <a href='/#catalog'>üìã –£—Å–ª—É–≥–∏</a>
                <a href='tel:+79522003990'>üìû +7 (952) 200-39-90</a>
            </nav>
        </div>
    </header>

    <div class='container'>
        <div class='hero'>
            <h1>üõçÔ∏è –¢–æ–≤–∞—Ä—ã –¥–ª—è —Ñ–æ—Ç–æ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤</h1>
            <p>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ—Ä–∞–º–∫–∏, –∞–ª—å–±–æ–º—ã –∏ —Å—É–≤–µ–Ω–∏—Ä—ã. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ–¥ –≤–∞—à–∏ —Ñ–æ—Ç–æ.</p>
        </div>

        <div class='toolbar'>
            <div class='filters'>
                <a href='?cat=all' class='filter-btn <?=$filterCategory === 'all' ? 'active' : ''?>'>
                    –í—Å–µ —Ç–æ–≤–∞—Ä—ã (<?=count(array_filter($products, fn($p) => $p['enabled']))?>)
                </a>
                <?php foreach ($categories as $cat => $name): ?>
                    <?php $count = count(array_filter($products, fn($p) => $p['category'] === $cat && $p['enabled'])); ?>
                    <a href='?cat=<?=$cat?>' class='filter-btn <?=$filterCategory === $cat ? 'active' : ''?>'>
                        <?=$name?> (<?=$count?>)
                    </a>
                <?php endforeach; ?>
            </div>

            <button class='cart-toggle' onclick='toggleCart()'>
                üõí –ö–æ—Ä–∑–∏–Ω–∞ <span class='cart-count' id='cartCount'>0</span>
            </button>
        </div>

        <?php if (empty($filteredProducts)): ?>
            <div class='empty-state'>
                <div style='font-size: 64px; margin-bottom: 20px;'>üì¶</div>
                <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p>–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.</p>
                <p style='margin-top: 20px;'><a href='?cat=all' class='filter-btn'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</a></p>
            </div>
        <?php else: ?>
            <div class='products-grid'>
                <?php foreach ($filteredProducts as $product): ?>
                    <div class='product-card <?=$product['featured'] ? 'featured' : ''?>'>
                        <div class='product-image'>
                            <?php if ($product['image'] && file_exists(__DIR__ . '/uploads/' . $product['image'])): ?>
                                <img src='uploads/<?=esc($product['image'])?>' alt='<?=esc($product['name'])?>'>
                            <?php else: ?>
                                <div class='no-image'>üì¶</div>
                            <?php endif; ?>
                        </div>

                        <div class='product-info'>
                            <h3 class='product-title'><?=esc($product['name'])?></h3>
                            <p class='product-description'><?=esc($product['description'])?></p>

                            <div class='product-price'>
                                <span class='current-price'><?=number_format($product['price'], 0, ',', ' ')?> ‚ÇΩ</span>
                                <?php if ($product['old_price'] > 0): ?>
                                    <span class='old-price'><?=number_format($product['old_price'], 0, ',', ' ')?> ‚ÇΩ</span>
                                    <span class='discount'>-<?=round((1 - $product['price']/$product['old_price']) * 100)?>%</span>
                                <?php endif; ?>
                            </div>

                            <div class='stock-info <?=$product['stock'] < 5 ? 'stock-low' : ''?>'>
                                <?php if ($product['stock'] > 0): ?>
                                    ‚úÖ –í –Ω–∞–ª–∏—á–∏–∏: <?=$product['stock']?> —à—Ç
                                    <?php if ($product['stock'] < 5): ?> (–º–∞–ª–æ!)<?php endif; ?>
                                <?php else: ?>
                                    ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                                <?php endif; ?>
                            </div>

                            <?php if ($product['stock'] > 0): ?>
                                <button class='add-to-cart-btn' 
                                        data-id='<?=$product['id']?>'
                                        data-name='<?=esc($product['name'])?>'
                                        data-price='<?=$product['price']?>'
                                        data-image='<?=esc($product['image'] ?? '')?>'
                                        data-stock='<?=$product['stock']?>'
                                        onclick='addToCart(this)'>
                                    üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                                </button>
                            <?php else: ?>
                                <button class='add-to-cart-btn' disabled>
                                    ‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                                </button>
                            <?php endif; ?>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </div>

    <!-- Overlay –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã -->
    <div class='overlay' id='cartOverlay' onclick='closeCart()'></div>

    <!-- –ö–æ—Ä–∑–∏–Ω–∞ -->
    <div class='cart-sidebar' id='cartSidebar'>
        <div class='cart-header'>
            <h3>üõí –ö–æ—Ä–∑–∏–Ω–∞</h3>
            <button class='cart-close' onclick='closeCart()'>&times;</button>
        </div>
        <div class='cart-body' id='cartBody'>
            <div style='text-align: center; color: #6c757d; padding: 40px 20px;'>
                <div style='font-size: 48px; margin-bottom: 15px;'>üõí</div>
                <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                <small style='color: #adb5bd;'>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑</small>
            </div>
        </div>
        <div class='cart-footer'>
            <div class='cart-total' id='cartTotal'>–ò—Ç–æ–≥–æ: 0 ‚ÇΩ</div>
            <button class='checkout-btn' onclick='openCheckout()' id='checkoutBtn' disabled>
                üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
            </button>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ -->
    <div id='checkoutModal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <h2 class='modal-title'>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
                <button class='close-btn' onclick='closeCheckout()'>&times;</button>
            </div>
            <div class='modal-body'>
                <form id='checkoutForm'>
                    <input type='hidden' name='mode' value='cart_order'>
                    <input type='hidden' name='cart' id='cartData'>

                    <div class='form-group'>
                        <label>üë§ –í–∞—à–µ –∏–º—è *</label>
                        <input type='text' name='name' required placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'>
                    </div>

                    <div class='form-group'>
                        <label>üìû –¢–µ–ª–µ—Ñ–æ–Ω *</label>
                        <input type='tel' name='phone' required placeholder='+7 (999) 123-45-67'>
                    </div>

                    <div class='form-group'>
                        <label>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                        <textarea name='comment' rows='3' placeholder='–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã...'></textarea>
                    </div>

                    <?php if (!empty($cfg['yukassa']['enabled'])): ?>
                    <div class='payment-methods'>
                        <div style='font-weight: 600; margin-bottom: 10px;'>üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</div>
                        <div class='payment-option'>
                            <input type='radio' id='payment_offline' name='payment_method' value='offline' checked>
                            <label for='payment_offline'>–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ (–Ω–∞–ª–∏—á–Ω—ã–µ/–∫–∞—Ä—Ç–∞)</label>
                        </div>
                        <div class='payment-option'>
                            <input type='radio' id='payment_online' name='payment_method' value='online'>
                            <label for='payment_online'>üí∏ –û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞ (–Æ–ö–∞—Å—Å–∞)</label>
                        </div>
                    </div>
                    <?php endif; ?>

                    <div style='background: #f8f9fa; padding: 15px; border-radius: 6px; margin-bottom: 20px;'>
                        <div style='font-weight: 600; margin-bottom: 10px;'>üìã –í–∞—à –∑–∞–∫–∞–∑:</div>
                        <div id='orderSummary'></div>
                        <hr style='margin: 10px 0; border: none; border-top: 1px solid #dee2e6;'>
                        <div style='font-weight: 700; font-size: 18px; text-align: center;' id='orderTotal'></div>
                    </div>

                    <button type='submit' class='submit-btn'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑</button>
                    <div id='checkoutStatus' style='margin-top: 15px; text-align: center; font-weight: 600;'></div>
                </form>
            </div>
        </div>
    </div>

    <footer class='footer'>
        <div style='max-width: 1200px; margin: 0 auto; padding: 0 20px;'>
            <p><strong><?=esc($cfg['brand'] ?? '–§–æ—Ç–æ—Ü–µ–Ω—Ç—Ä –ü–†–ò–ù–¢–°–°')?></strong></p>
            <p><?=esc($cfg['address'] ?? '–≥. –°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —É–ª. –ö—Ä–∞—Å–Ω—ã—Ö –§–æ—Ä—Ç–æ–≤, 49')?></p>
            <p style='margin-top: 10px;'>
                <a href='tel:+79522003990' style='color: <?=$accentCol?>; font-weight: 600;'>üìû +7 (952) 200-39-90</a> ‚Ä¢ 
                <a href='mailto:artcopy78@bk.ru' style='color: <?=$accentCol?>; font-weight: 600;'>‚úâÔ∏è artcopy78@bk.ru</a>
            </p>
        </div>
    </footer>

    <script>
        // –ö–æ—Ä–∑–∏–Ω–∞
        let cart = JSON.parse(localStorage.getItem('cart') || '[]');

        function saveCart() {
            localStorage.setItem('cart', JSON.stringify(cart));
        }

        function addToCart(button) {
            const id = parseInt(button.dataset.id);
            const name = button.dataset.name;
            const price = parseInt(button.dataset.price);
            const image = button.dataset.image;
            const stock = parseInt(button.dataset.stock);

            const existingItem = cart.find(item => item.id === id);

            if (existingItem) {
                if (existingItem.quantity < stock) {
                    existingItem.quantity++;
                    showNotification(`–£–≤–µ–ª–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ "${name}" –≤ –∫–æ—Ä–∑–∏–Ω–µ`);
                } else {
                    showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ', 'error');
                    return;
                }
            } else {
                cart.push({
                    id: id,
                    name: name,
                    price: price,
                    image: image,
                    quantity: 1,
                    stock: stock
                });
                showNotification(`–¢–æ–≤–∞—Ä "${name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
            }

            saveCart();
            updateCartUI();
        }

        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            saveCart();
            updateCartUI();
        }

        function updateQuantity(productId, newQuantity) {
            const item = cart.find(item => item.id === productId);
            if (item) {
                if (newQuantity > 0 && newQuantity <= item.stock) {
                    item.quantity = newQuantity;
                } else if (newQuantity <= 0) {
                    removeFromCart(productId);
                    return;
                } else {
                    showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ', 'error');
                    return;
                }
                saveCart();
                updateCartUI();
            }
        }

        function updateCartUI() {
            const cartCount = document.getElementById('cartCount');
            const cartBody = document.getElementById('cartBody');
            const cartTotal = document.getElementById('cartTotal');
            const checkoutBtn = document.getElementById('checkoutBtn');

            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

            cartCount.textContent = totalItems;
            cartTotal.textContent = '–ò—Ç–æ–≥–æ: ' + totalPrice.toLocaleString('ru-RU') + ' ‚ÇΩ';

            if (cart.length === 0) {
                cartBody.innerHTML = `
                    <div style='text-align: center; color: #6c757d; padding: 40px 20px;'>
                        <div style='font-size: 48px; margin-bottom: 15px;'>üõí</div>
                        <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                        <small style='color: #adb5bd;'>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑</small>
                    </div>
                `;
                checkoutBtn.disabled = true;
            } else {
                cartBody.innerHTML = cart.map(item => `
                    <div class='cart-item'>
                        <div class='cart-item-image'>
                            ${item.image ? `<img src='uploads/${item.image}' alt='${item.name}'>` : '<div style="color: #adb5bd; font-size: 24px;">üì¶</div>'}
                        </div>
                        <div class='cart-item-info'>
                            <div class='cart-item-title'>${item.name}</div>
                            <div class='cart-item-price'>${item.price.toLocaleString('ru-RU')} ‚ÇΩ</div>
                            <div class='cart-item-controls'>
                                <button class='qty-btn' onclick='updateQuantity(${item.id}, ${item.quantity - 1})'>‚àí</button>
                                <input type='number' class='qty-input' value='${item.quantity}' min='1' max='${item.stock}'
                                       onchange='updateQuantity(${item.id}, parseInt(this.value))'>
                                <button class='qty-btn' onclick='updateQuantity(${item.id}, ${item.quantity + 1})'>+</button>
                                <button class='remove-btn' onclick='removeFromCart(${item.id})'>üóëÔ∏è</button>
                            </div>
                        </div>
                    </div>
                `).join('');
                checkoutBtn.disabled = false;
            }
        }

        function toggleCart() {
            const sidebar = document.getElementById('cartSidebar');
            const overlay = document.getElementById('cartOverlay');

            sidebar.classList.toggle('open');
            overlay.classList.toggle('show');
        }

        function closeCart() {
            const sidebar = document.getElementById('cartSidebar');
            const overlay = document.getElementById('cartOverlay');

            sidebar.classList.remove('open');
            overlay.classList.remove('show');
        }

        function openCheckout() {
            if (cart.length === 0) return;

            const modal = document.getElementById('checkoutModal');
            const orderSummary = document.getElementById('orderSummary');
            const orderTotal = document.getElementById('orderTotal');
            const cartData = document.getElementById('cartData');

            const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

            orderSummary.innerHTML = cart.map(item => `
                <div style='display: flex; justify-content: space-between; margin-bottom: 8px; font-size: 14px;'>
                    <span>${item.name} √ó ${item.quantity}</span>
                    <span>${(item.price * item.quantity).toLocaleString('ru-RU')} ‚ÇΩ</span>
                </div>
            `).join('');

            orderTotal.textContent = '–ò—Ç–æ–≥–æ: ' + totalPrice.toLocaleString('ru-RU') + ' ‚ÇΩ';
            cartData.value = JSON.stringify(cart);

            modal.classList.add('show');
            closeCart();
        }

        function closeCheckout() {
            document.getElementById('checkoutModal').classList.remove('show');
            document.getElementById('checkoutForm').reset();
            document.getElementById('checkoutStatus').textContent = '';
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message;

            if (type === 'error') {
                notification.style.background = '#dc3545';
            }

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
        document.getElementById('checkoutForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const status = document.getElementById('checkoutStatus');
            const submitBtn = e.target.querySelector('button[type="submit"]');

            status.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑...';
            status.style.color = '<?=$accentCol?>';
            submitBtn.disabled = true;

            try {
                const formData = new FormData(e.target);
                const response = await fetch(window.location.href, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.ok) {
                    status.textContent = '‚úÖ ' + result.message;
                    status.style.color = '#28a745';

                    if (result.payment && result.payment_url) {
                        status.textContent += ' –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ...';
                        setTimeout(() => {
                            window.open(result.payment_url, '_blank');
                        }, 1500);
                    }

                    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
                    cart = [];
                    saveCart();
                    updateCartUI();

                    setTimeout(() => {
                        closeCheckout();
                        showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
                    }, result.payment ? 3000 : 2000);
                } else {
                    status.textContent = '‚ùå ' + result.message;
                    status.style.color = '#dc3545';
                }
            } catch (error) {
                status.textContent = '‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
                status.style.color = '#dc3545';
            } finally {
                submitBtn.disabled = false;
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.getElementById('checkoutModal').addEventListener('click', (e) => {
            if (e.target.id === 'checkoutModal') {
                closeCheckout();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                if (document.getElementById('checkoutModal').classList.contains('show')) {
                    closeCheckout();
                } else if (document.getElementById('cartSidebar').classList.contains('open')) {
                    closeCart();
                }
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {
            updateCartUI();
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Ç–æ–≤–∞—Ä–æ–≤:', cart.length);
        });
    </script>
</body>
</html>
